name: Unit Tests

on:
  push:
    branches:
      - main
      - cont_integ
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: "macos-latest"
        python-version: "3.11"
        # os: ["ubuntu-latest", "windows-latest", "macos-latest"]
        # python-version: ["3.12", "3.11"]
      fail-fast: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: requirements.txt

      - name: Install dependencies
        run: |
          python -m pip install -U pip setuptools wheel
          pip install -r requirements.txt -r requirements_dev.txt
          pip install dvc
          pip list

      # - name: Set up DVC remote
      #   run: |
      #     dvc remote add -d myremote <remote-url>  # Replace <remote-url> with the URL of your DVC remote
      #     dvc remote modify myremote --local auth basic  # Set authentication method (you can change this based on your remote's method)
      #     dvc remote modify myremote --local user ${{ secrets.DVC_USER }}  # Use GitHub secrets for user credentials
      #     dvc remote modify myremote --local password ${{ secrets.DVC_PASSWORD }}  # Use GitHub secrets for password

      # - name: Pull DVC data
      #   run: |
      #     dvc pull train_data.pkl, test_data.pkl

      - name: Run Pre-Commit
        run: |
          pip install pre-commit
          pre-commit run --all-files

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/src" >> $GITHUB_ENV

      - name: Run tests & coverage
        run: |
          coverage run -m pytest tests/ --junitxml=pytest-report.xml
          coverage report -m
          coverage xml

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage*.xml

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-report
          path: pytest-report.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
